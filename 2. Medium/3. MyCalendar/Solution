class MyCalendar {
    vector<pair<int, int>> calendar; 
public:
    MyCalendar() {  
    }
    
    bool book(int start, int end) {
        for(const auto [s,e]:calendar){
            if((start < e)&& (s<end)){
                return false;
            }
        }
        calendar.emplace_back(start,end);
        return true;
    }
};

/*
class MyCalendar {
    vector<int> nl; 
public:
    MyCalendar() {
       for(int i=0; i<1000000000; i++){
           nl.push_back(0);
       }   
    }
    
    bool book(int start, int end) {
        if(nl[start]==0 && nl[end-1]==0){
            for(int i=start; i<end; i++){
                nl[i]=1;
            }
            return true;
        }
        return false;
    }
};
*/
/**
 * Your MyCalendar object will be instantiated and called as such:
 * MyCalendar* obj = new MyCalendar();
 * bool param_1 = obj->book(start,end);
 */